version: '3'

services:
  # Secure Socket and Auto Update images
  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    domainname: watchtower
    restart: unless-stopped
    networks:
      - traefikNetwork
    depends_on:
      - dockerproxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'
    command: --label-enable --cleanup --interval 36000 -H tcp://dockerproxy:2375

  dockerproxy:
    image: tecnativa/docker-socket-proxy
    container_name: dockerproxy
    domainname: dockerproxy
    restart: unless-stopped
    networks:
      - traefikNetwork
    ports:
      - 2375
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - CONTAINERS=1
      - TASKS=1 # Portaienr
      - VOLUMES=1 # Portainer
      - SERVICES=1
      - IMAGES=1 # Portainer, Watchtower
      - INFO=1 # Portainer
      - NETWORKS=1 # Portainer, Watchtower
      - POST=1 # Watchtower
      - DELETE=1 # Watchtower
      - CONTAINERS_CREATE=1 # WatchTower
      - CONTAINERS_START=1 # WatchTower
      - CONTAINERS_UPDATE=1 # WatchTower
      - CONTAINERS_DELETE=1 # WatchTower
      - IMAGES_DELETE=1 # WatchTower

  # Web Reverse Proxy
  traefik:
    image: traefik:v2.4
    container_name: traefik
    domainname: ${TRAEFIK_DOMAIN}
    restart: unless-stopped
    networks:
      - traefikNetwork
      - webircNetwork
      - adguardNetwork
      - syncthingNetwork
      - piholeNetwork
    ports:
      - 80:80
      - 443:443
    depends_on:
      - dockerproxy
    volumes:
      - ${CONFIG_PATH}/traefik/certs:/letsencrypt/
    command:
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--providers.docker.endpoint=tcp://dockerproxy:2375'
      # configure endpoints
      - '--entrypoints.web.address=:80'
      - '--entrypoints.web.http.redirections.entrypoint.to=websecure'
      - '--entrypoints.web.http.redirections.entrypoint.scheme=https'
      - '--entrypoints.websecure.address=:443'
      # SSL configuration
      - '--certificatesresolvers.letsencryptresolver.acme.httpchallenge=true'
      - '--certificatesresolvers.letsencryptresolver.acme.httpchallenge.entrypoint=web'
      - '--certificatesresolvers.letsencryptresolver.acme.email=${TRAEFIK_MAIL}'
      - '--certificatesresolvers.letsencryptresolver.acme.storage=/letsencrypt/acme.json'
    dns:
      - ${TRAEFIK_DNS1}
      - ${TRAEFIK_DNS2}
  # webservices
  portainer:
    image: portainer/portainer:latest
    container_name: portainer
    domainname: portainer
    restart: unless-stopped
    networks:
      - traefikNetwork
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${CONFIG_PATH}/portainer:/data
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.portainer-secure.entrypoints=websecure'
      - 'traefik.http.routers.portainer-secure.rule=Host(`${PORTAINER_DOMAIN}`)'
      - 'traefik.http.routers.portainer-secure.tls=true'
      - 'traefik.http.routers.portainer-secure.tls.certresolver=letsencryptresolver'
      - 'traefik.http.routers.portainer-secure.service=portainer'
      - 'traefik.http.services.portainer.loadbalancer.server.port=9000'
      - 'traefik.docker.network=traefikNetwork'
      - 'com.centurylinklabs.watchtower.enable=true'
    command: -H tcp://dockerproxy:2375
    security_opt:
      - no-new-privileges:true
  webirc:
    image: thelounge/thelounge:latest
    container_name: webirc
    domainname: webirc
    restart: unless-stopped
    networks:
      - webircNetwork
    ports:
      - 113:9001
      - 9000:9000
    volumes:
      - ${CONFIG_PATH}/irc:/var/opt/thelounge
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.irc.entrypoints=websecure'
      - 'traefik.http.routers.irc.rule=Host(`${IRC_DOMAIN}`)'
      - 'traefik.http.routers.irc.tls=true'
      - 'traefik.http.routers.irc.tls.certresolver=letsencryptresolver'
      - 'traefik.docker.network=webircNetwork'
      - 'com.centurylinklabs.watchtower.enable=true'
  pihole:
    image: pihole/pihole:nightly
    container_name: pihole
    domainname: pihole
    restart: unless-stopped
    networks:
      - piholeNetwork
    ports:
      - '0.0.0.0:53:53/tcp'
      - '0.0.0.0:53:53/udp'
      - '0.0.0.0:67:67/udp'
    depends_on:
      - watchtower
    volumes:
      - ${CONFIG_PATH}/pihole/etc-pihole/:/etc/pihole/
      - ${CONFIG_PATH}/pihole/etc-dnsmasqd/:/etc/dnsmasq.d/
    environment:
      - ServerIP=${PIHOLE_IP}
      - TZ=${TIMEZONE}
      - WEBPASSWORD=${PIHOLE_PASS}
      - PROXY_LOCATION=pihole
      - VIRTUAL_HOST=${PIHOLE_DOMAIN}
      - VIRTUAL_PORT=${PIHOLE_PORT}
      - DNS1=${PIHOLE_DNS1}
      - DNS2=${PIHOLE_DNS2}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.pihole.entrypoints=websecure'
      - 'traefik.http.routers.pihole.rule=Host(`${PIHOLE_DOMAIN}`)'
      - 'traefik.http.routers.pihole.tls=true'
      - 'traefik.http.routers.pihole.tls.certresolver=letsencryptresolver'
      - 'traefik.docker.network=piholeNetwork'
      - 'traefik.http.services.pihole.loadbalancer.server.port=${PIHOLE_PORT}'
      - 'traefik.http.middlewares.pihole-basic-auth.basicauth.users=${PIHOLE_SECOND_AUTH}'
      - 'traefik.http.routers.pihole.middlewares=pihole-basic-auth'
      - 'com.centurylinklabs.watchtower.enable=true'
    dns:
      - 127.0.0.1
      - ${PIHOLE_DNS1}
      - ${PIHOLE_DNS2}
  syncthing:
    image: ghcr.io/linuxserver/syncthing
    container_name: syncthing
    domainname: syncthing
    restart: unless-stopped
    hostname: dojosync
    networks:
      - syncthingNetwork
    ports:
      - 22000:22000/tcp
      - 22000:22000/udp
    volumes:
      - ${CONFIG_PATH}/syncthing:/config
      - ${SAMBA_HOST_VOLUME}/sync:/data1
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.sync.entrypoints=websecure'
      - 'traefik.http.routers.sync.rule=Host(`${SYNC_DOMAIN}`)'
      - 'traefik.http.routers.sync.tls=true'
      - 'traefik.http.routers.sync.tls.certresolver=letsencryptresolver'
      - 'traefik.docker.network=syncthingNetwork'
      - 'traefik.http.services.sync.loadbalancer.server.port=8384'
      - 'com.centurylinklabs.watchtower.enable=true'

  # network services
  samba:
    image: dperson/samba
    restart: unless-stopped
    networks:
      - shareNetwork
    ports:
      - '137:137/udp'
      - '138:138/udp'
      - '139:139/tcp'
      - '445:445/tcp'
    volumes:
      - ${SAMBA_HOST_VOLUME}/media:/mnt:z
    environment:
      - TZ=${TIMEZONE}
    read_only: true
    command: '-s "media;/mnt;yes;no;no;${SAMBA_USER}" -u "${SAMBA_USER};${SAMBA_PASS}" -p'
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'
    tmpfs:
      - /tmp
    stdin_open: true
    tty: true
networks:
  shareNetwork:
    external: true
  piholeNetwork:
    external: true
  traefikNetwork:
    external: true
  webircNetwork:
  adguardNetwork:
  syncthingNetwork:
