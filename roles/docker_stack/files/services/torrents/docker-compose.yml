---
version: "3.7"

networks:
  proxy_network:
    external: true

services:
  sonarr:
    image: linuxserver/sonarr:arm64v8-latest
    restart: always
    env_file:
      - .env
    environment:
      - PUID=${PUID}
      - GUID=${GUID}
    labels:
      - traefik.enable=true
      - com.centurylinklabs.watchtower.enable=true
      # sonarr
      - traefik.http.routers.sonarr.entrypoints=${SONARR_DEFAULT_ENDPOINT}
      - traefik.http.routers.sonarr.rule=Host(`${SONARR_DOMAIN}`)
      - traefik.http.routers.sonarr.tls=${SONARR_ENABLE_SSL}
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
      - traefik.http.routers.sonarr.service=sonarr
    networks:
      - proxy_network
    volumes:
      - ${DATA_PATH}/volumes/torrents/sonarr:/config
      - ${MEDIA_PATH}:/downloads
    depends_on:
      - jacket

  jacket:
    image: linuxserver/jackett:arm64v8-latest
    restart: always
    labels:
      - traefik.enable=true
      - com.centurylinklabs.watchtower.enable=true
      - traefik.http.routers.jacket.entrypoints=${JACKET_DEFAULT_ENDPOINT}
      - traefik.http.routers.jacket.rule=Host(`${JACKET_DOMAIN}`)
      - traefik.http.routers.jacket.tls=${JACKET_ENABLE_SSL}
      - traefik.http.services.jacket.loadbalancer.server.port=9117
      - traefik.http.routers.jacket.service=jacket
    networks:
      - proxy_network
    env_file:
      - .env
    environment:
      - PUID=${PUID}
      - GUID=${GUID}
    volumes:
      - ${DATA_PATH}/volumes/torrents/jacket:/config
      - ${MEDIA_PATH}:/downloads

  radarr:
    image: linuxserver/radarr:arm64v8-latest
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - com.centurylinklabs.watchtower.enable=true
      - traefik.http.routers.radarr.entrypoints=${RADARR_DEFAULT_ENDPOINT}
      - traefik.http.routers.radarr.rule=Host(`${RADARR_DOMAIN}`)
      - traefik.http.routers.radarr.tls=${RADARR_ENABLE_SSL}
      - traefik.http.services.radarr.loadbalancer.server.port=7878
      - traefik.http.routers.radarr.service=radarr
    env_file:
      - .env
    environment:
      - PUID=${PUID}
      - GUID=${GUID}
    networks:
      - proxy_network
    volumes:
      - ${DATA_PATH}/volumes/torrents/radarr:/config
      - ${MEDIA_PATH}:/downloads
    depends_on:
      - jacket

  torrentclient:
    image: linuxserver/qbittorrent:latest
    restart: always
    container_name: torrentclient
    network_mode: service:gluetun
    env_file:
      - .env
    environment:
      - PUID=${PUID}
      - GUID=${GUID}
      - TZ=Etc/UTC
      - WEBUI_PORT=8383
    volumes:
      - ${DATA_PATH}/volumes/torrents/qbittorrent:/config
      - ${MEDIA_PATH}:/downloads
    labels:
      - com.centurylinklabs.watchtower.enable=true

  torrentcronjob:
    build:
      context: .
      dockerfile: ./cronjob.Dockerfile
    restart: always
    network_mode: service:gluetun

  port-forward:
    image: ceramicwhite/gluetun-port-forward-qbit-cron:latest
    container_name: port-forward
    restart: always
    environment:
      - QBT_USERNAME=${QBT_USERNAME}
      - QBT_PASSWORD=${QBT_PASSWORD}
      - QBT_ADDR=http://gluetun:8383
      - GTN_ADDR=http://gluetun:8000
    depends_on:
      - gluetun
      - torrentclient
    networks:
      - proxy_network

  gluetun:
    image: qmcgaw/gluetun:latest
    restart: always
    hostname: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8888:8888/tcp # HTTP proxy
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
      - 8282:8080
      - 8001:8000/tcp
      - 8010:8010
      - 54386:54386/udp
      - 9117:9117
      - 6081:6881
      - 6081:6881/udp
      - 6011:6011
    volumes:
      - ${DATA_PATH}/volumes/torrents/vpn:/gluetun
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_PROVIDER}
      - VPN_TYPE=openvpn
      - OPENVPN_PROTOCOL=tcp
      - VPN_PORT_FORWARDING_PROVIDER=protonvpn
      - VPN_PORT_FORWARDING=on
      - WIREGUARD_PUBLIC_KEY=${WIREGUARD_PUBLIC_KEY}
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
      #- HTTP_CONTROL_SERVER_ADDRESS=${HTTP_CONTROL_SERVER_ADDRESS}
      #- VPN_ENDPOINT_IP=${VPN_ENDPOINT_IP}
      #- VPN_ENDPOINT_PORT=${VPN_ENDPOINT_PORT}
      - OPENVPN_USER=${OPENVPN_USER}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      - SERVER_COUNTRIES=${VPN_SERVER_COUNTRIES}
      - SERVER_HOSTNAMES=${SERVER_HOSTNAMES}
    labels:
      - traefik.enable=true
      # torrentclient
      - traefik.http.routers.torrentclient.entrypoints=${TORRENTS_DEFAULT_ENDPOINT}
      - traefik.http.routers.torrentclient.rule=Host(`${TORRENTS_DOMAIN}`)
      - traefik.http.routers.torrentclient.tls=${TORRENTS_ENABLE_SSL}
      - traefik.http.services.torrentclient.loadbalancer.server.port=8383
      - traefik.http.routers.torrentclient.service=torrentclient
      # general
      - traefik.docker.network=proxy_network
      - com.centurylinklabs.watchtower.enable=true
    networks:
      - proxy_network
    dns:
      - 192.168.2.4
