
---
version: '3.7'

networks:
  proxy_network:
    external: true
  torrents_network:
    external:  true

services:

  sonarr:
    image: linuxserver/sonarr:arm64v8-3.0.10
    user: "${UID}:${GID}"
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.sonarr.entrypoints=${SONARR_DEFAULT_ENDPOINT}'
        - 'traefik.http.routers.sonarr.rule=Host(`${SONARR_DOMAIN}`)'
        - 'traefik.http.routers.sonarr.tls=${SONARR_ENABLE_SSL}'
        - 'traefik.http.routers.sonarr.tls.certresolver=letsencryptresolver'
        - 'traefik.docker.network=proxy_network'
        - 'traefik.http.services.sonarr.loadbalancer.server.port=8989'
    hostname: sonarr
    networks:
      - torrents_network
      - proxy_network
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ${DATA_PATH}/volumes/torrents/sonarr:/config
      - ${MEDIA_PATH}:/downloads
    depends_on:
      - jacket

  jacket:
    image: linuxserver/jackett:arm64v8-0.21.568
    user: "${UID}:${GID}"
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.jacket.entrypoints=${JACKET_DEFAULT_ENDPOINT}'
        - 'traefik.http.routers.jacket.rule=Host(`${JACKET_DOMAIN}`)'
        - 'traefik.http.routers.jacket.tls=${JACKET_ENABLE_SSL}'
        - 'traefik.http.routers.jacket.tls.certresolver=letsencryptresolver'
        - 'traefik.docker.network=proxy_network'
        - 'traefik.http.services.jacket.loadbalancer.server.port=9117'
    hostname: jacket
    networks:
      - torrents_network
      - proxy_network
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ${DATA_PATH}/volumes/torrents/jacket:/config
      - ${MEDIA_PATH}:/downloads

  radarr:
    image: linuxserver/radarr:arm64v8-4.6.4
    user: "${UID}:${GID}"
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.radarr.entrypoints=${RADARR_DEFAULT_ENDPOINT}'
        - 'traefik.http.routers.radarr.rule=Host(`${RADARR_DOMAIN}`)'
        - 'traefik.http.routers.radarr.tls=${RADARR_ENABLE_SSL}'
        - 'traefik.http.routers.radarr.tls.certresolver=letsencryptresolver'
        - 'traefik.docker.network=proxy_network'
        - 'traefik.http.services.radarr.loadbalancer.server.port=7878'
    networks:
      - torrents_network
      - proxy_network
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ${DATA_PATH}/volumes/torrents/radarr:/config
      - ${MEDIA_PATH}:/downloads
    depends_on:
      - jacket

  torrentclient:
    image: lscr.io/linuxserver/qbittorrent:latest
    user: "${UID}:${GID}"
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 3
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.250'
          memory: 250M
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.torrentclient.entrypoints=${TORRENTS_DEFAULT_ENDPOINT}'
        - 'traefik.http.routers.torrentclient.rule=Host(`${TORRENTS_DOMAIN}`)'
        - 'traefik.http.routers.torrentclient.tls=${TORRENTS_ENABLE_SSL}'
        - 'traefik.http.routers.torrentclient.tls.certresolver=letsencryptresolver'
        - 'traefik.docker.network=torrents_network'
        - 'traefik.http.services.torrentclient.loadbalancer.server.port=8080'
    container_name: torrentclient
    networks:
      - torrents_network
      - proxy_network
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - ${DATA_PATH}/volumes/torrents/qbittorrent:/config/qBittorrent
      - ${MEDIA_PATH}:/downloads
