
---
version: '3.7'

networks:
  proxy_network:
    external: true
  torrents_network:
    external:  true

services:
  vpn_service:
    image: registry.gitlab.com/ix.ai/swarm-launcher
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:rw'
    networks:
      - torrents_network
    environment:
      LAUNCH_IMAGE: qmcgaw/gluetun
      LAUNCH_PULL: 'true'
      LAUNCH_EXT_NETWORKS: 'torrents_network'
      LAUNCH_PROJECT_NAME: 'vpn'
      LAUNCH_SERVICE_NAME: 'vpn-gluetun'
      LAUNCH_CAP_ADD: 'NET_ADMIN'
      LAUNCH_ENVIRONMENTS: 'VPN_SERVICE_PROVIDER=${VPN_PROVIDER} OPENVPN_USER=${VPN_USER} OPENVPN_PASSWORD=${VPN_PASSWORD} SERVER_COUNTRIES=${VPN_SERVER_COUNTRIES} HTTPPROXY=on HTTPPROXY_LOG=on'
      LAUNCH_PORTS: '8888:8888/tcp'
    deploy:
      placement:
        constraints: [ node.role == manager ]
      restart_policy:
        condition: on-failure
  sonarr:
    image: linuxserver/sonarr:arm64v8-3.0.10
    user: "${UID}:${GID}"
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.sonarr.entrypoints=${SONARR_DEFAULT_ENDPOINT}'
        - 'traefik.http.routers.sonarr.rule=Host(`${SONARR_DOMAIN}`)'
        - 'traefik.http.routers.sonarr.tls=${SONARR_ENABLE_SSL}'
        - 'traefik.http.routers.sonarr.tls.certresolver=letsencryptresolver'
        - 'traefik.docker.network=proxy_network'
        - 'traefik.http.services.sonarr.loadbalancer.server.port=8989'
    hostname: sonarr
    networks:
      - proxy_network
      - torrents_network
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ${DATA_PATH}/volumes/torrents/sonarr:/config
      - ${MEDIA_PATH}:/downloads
    depends_on:
      - gluetun
      - jacket

  jacket:
    image: linuxserver/jackett:arm64v8-0.21.568
    user: "${UID}:${GID}"
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.jacket.entrypoints=${JACKET_DEFAULT_ENDPOINT}'
        - 'traefik.http.routers.jacket.rule=Host(`${JACKET_DOMAIN}`)'
        - 'traefik.http.routers.jacket.tls=${JACKET_ENABLE_SSL}'
        - 'traefik.http.routers.jacket.tls.certresolver=letsencryptresolver'
        - 'traefik.docker.network=proxy_network'
        - 'traefik.http.services.jacket.loadbalancer.server.port=9117'
    hostname: jacket
    networks:
      - proxy_network
      - torrents_network
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ${DATA_PATH}/volumes/torrents/jacket:/config
      - ${MEDIA_PATH}:/downloads
    depends_on:
      - gluetun

  radarr:
    image: linuxserver/radarr:arm64v8-4.6.4
    user: "${UID}:${GID}"
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
        delay: 30s
        max_attempts: 3
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.radarr.entrypoints=${RADARR_DEFAULT_ENDPOINT}'
        - 'traefik.http.routers.radarr.rule=Host(`${RADARR_DOMAIN}`)'
        - 'traefik.http.routers.radarr.tls=${RADARR_ENABLE_SSL}'
        - 'traefik.http.routers.radarr.tls.certresolver=letsencryptresolver'
        - 'traefik.docker.network=proxy_network'
        - 'traefik.http.services.radarr.loadbalancer.server.port=7878'
    networks:
      - proxy_network
      - torrents_network
    environment:
      - PUID=1000
      - PGID=1000
    volumes:
      - ${DATA_PATH}/volumes/torrents/radarr:/config
      - ${MEDIA_PATH}:/downloads
    depends_on:
      - gluetun
      - jacket

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    user: "${UID}:${GID}"
    deploy:
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: any
        delay: 30s
        max_attempts: 3
      labels:
        - 'traefik.enable=true'
        - 'traefik.http.routers.qbittorrent.entrypoints=${TORRENTS_DEFAULT_ENDPOINT}'
        - 'traefik.http.routers.qbittorrent.rule=Host(`${TORRENTS_DOMAIN}`)'
        - 'traefik.http.routers.qbittorrent.tls=${TORRENTS_ENABLE_SSL}'
        - 'traefik.http.routers.qbittorrent.tls.certresolver=letsencryptresolver'
        - 'traefik.docker.network=proxy_network'
        - 'traefik.http.services.qbittorrent.loadbalancer.server.port=8080'
      resources:
        limits:
          cpus: "0.75"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 128M
    container_name: qbittorrent
    networks:
      - proxy_network
      - torrents_network
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - WEBUI_PORT=8080
    volumes:
      - ${DATA_PATH}/volumes/media/qbittorrent:/config
      - ${MEDIA_PATH}:/downloads
    depends_on:
      - gluetun
