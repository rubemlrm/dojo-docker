---
version: '3'

volumes:
  qbittorrent_data: {}
  pihole_data: {}
  pihole_dns_data: {}

networks:
  shareNetwork:
    external: true
  piholeNetwork:
    external: true
services:
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - WEBUI_PORT=8080
    networks:
      - proxyNetwork
    volumes:
      - qbittorrent_data:/config
      - ${SAMBA_HOST_VOLUME}:/downloads
    ports:
      - 6881:6881
      - 6881:6881/udp
    restart: unless-stopped
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.qbittorrent.entrypoints=web'
      - 'traefik.http.routers.qbittorrent.rule=Host(`${TORRENT_DOMAIN}`)'
      - 'traefik.http.routers.qbittorrent.tls=false'
      - 'traefik.http.routers.qbittorrent.tls.certresolver=letsencryptresolver'
      - 'traefik.http.routers.qbittorrent.service=qbittorrent'
      - 'traefik.http.services.qbittorrent.loadbalancer.server.port=8080'
      - 'traefik.docker.network=proxyNetwork'
      - 'com.centurylinklabs.watchtower.enable=true'
      - 'docker-volume-backup.stop-during-backup=true'
  # network services
  pihole:
    image: pihole/pihole:nightly
    container_name: pihole
    domainname: pihole
    restart: unless-stopped
    networks:
      - piholeNetwork
    ports:
      - '0.0.0.0:53:53/tcp'
      - '0.0.0.0:53:53/udp'
      - '0.0.0.0:67:67/udp'
    depends_on:
      - watchtower
    volumes:
      - ./config/pihole/custom.list:/etc/pihole/custom.list
      - pihole_data:/etc/pihole/
      - pihole_dns_data:/etc/dnsmasq.d/
    environment:
      - ServerIP=${PIHOLE_IP}
      - TZ=${TIMEZONE}
      - WEBPASSWORD=${PIHOLE_PASS}
      - VIRTUAL_HOST=${PIHOLE_DOMAIN}
      - DNS1=${PIHOLE_DNS1}
      - DNS2=${PIHOLE_DNS2}
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.pihole.entrypoints=websecure'
      - 'traefik.http.routers.pihole.rule=Host(`${PIHOLE_DOMAIN}`)'
      - 'traefik.http.routers.pihole.tls=true'
      - 'traefik.http.routers.pihole.tls.certresolver=letsencryptresolver'
      - 'traefik.docker.network=piholeNetwork'
      - 'traefik.http.services.pihole.loadbalancer.server.port=${PIHOLE_PORT}'
      - 'com.centurylinklabs.watchtower.enable=true'
      - 'docker-volume-backup.stop-during-backup=true'
    dns:
      - 127.0.0.1
      - ${PIHOLE_DNS1}
      - ${PIHOLE_DNS2}
  samba:
    image: dperson/samba
    restart: unless-stopped
    networks:
      - shareNetwork
    ports:
      - '137:137/udp'
      - '138:138/udp'
      - '139:139/tcp'
      - '445:445/tcp'
    volumes:
      - ${SAMBA_HOST_VOLUME}:/mnt:z
    environment:
      - TZ=${TIMEZONE}
      - USERID=${PUID}
      - GROUPID=${PGID}
    read_only: true
    command: '-s "media;/mnt;yes;no;no;${SAMBA_USER}" -u "${SAMBA_USER};${SAMBA_PASS}" -p'
    labels:
      - 'com.centurylinklabs.watchtower.enable=true'
    tmpfs:
      - /tmp
    stdin_open: true
    tty: true

  pihole-exporter:
    image: ekofr/pihole-exporter:latest
    container_name: pihole_exporter
    restart: unless-stopped
    networks:
      - monitoring
      - piholeNetwork
    environment:
      - PIHOLE_HOSTNAME=pihole
      - PIHOLE_PASSWORD=${PIHOLE_PASS}
      - PORT=6317
